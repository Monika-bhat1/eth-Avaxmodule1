// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract ErrorHandlingExample {
    uint256 public value;

    function setValue(uint _newValue) external {
        // Using require to check conditions and revert if the condition is not met.
        require(_newValue > 5, "Value must be greater than five");

        // Using assert for internal errors that should not occur during normal operation.
        assert(_newValue != 80);

        // The contract should handle internal errors gracefully, but it is also possible to revert with a custom message.
        if (_newValue == 700) {
            revert("Cannot set value to 100");
        }

        value = _newValue;
    }
}
